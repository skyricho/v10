{% extends "base.html" %}

{% block title %}Report an Address Error{% endblock %}

{% block Navbar %}
  <a class="navbar-brand" href="index.php">At Homes</a>
  {% if mapNumber %}
  <button onclick="loadMapDetails({{ mapNumber }})" class="nav-link btn btn-outline-light" data-toggle="collapse" href="#map-{{ mapNumber }}-info" role="button" aria-expanded="false" aria-controls="map-{{ mapNumber }}-info" ic-get-from="mapDetails.php?Map={{ mapNumber }}" ic-target="#mapDetails">Map {{ mapNumber }}</button>
  {% endif %}
  <button class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#navbarsExample01" aria-controls="navbarsExample01" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>          
  </button>

  <div class="navbar-collapse collapse" id="navbarsExample01" style="">
    <ul class="navbar-nav mr-auto">
        {% if mapNumber %}
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
             {% if navbarFilter %}
                 Hide Contacted
               {% else %}
                 Show All
               {% endif %}
          </a>
          <div class="dropdown-menu" aria-labelledby="navbarDropdown">
            <a class="dropdown-item" href="?Map={{ mapNumber }}&Block={{blockNumber }}&Street={{ streetWithDash }}">
              Show All
            </a>
            <a class="dropdown-item" href="?Map={{ mapNumber }}&Block={{blockNumber }}&Street={{ streetWithDash }}&Filter=Contacted">
              Hide Contacted
            </a>
          </div>
        </li>
        {% endif %}
        <li class="nav-item">
        <a class="nav-link" href="whatsapp://chat?code=ALhU5zMyOlu82xhiHwi8UV">Help (WhatsApp Group)</a>
        </li> 
        <li class="nav-item">
        <a class="nav-link" href="phone">Phone Calls</a>
        </li>
         <li class="nav-item">
        <a class="nav-link" href="admin/?Filter=assigned">Admin</a>
        </li>
        <li class="nav-item">
        <a class="nav-link" href="admin/s-13.php">S-13</a>
        </li>
        
      <!--
      <li class="nav-item">
        <a class="nav-link disabled" href="#">Account</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="signout.php">Sign out</a>
      </li>-->
    </ul>
  </div>
{% endblock %}

{% block content %}
<main role="main" class="container">
      



  <div class="form-group mt-3">
    <label for="autocomplete">Report an address error</label>
    <!--<input id="autocomplete" placeholder="Enter address" onFocus="geolocate()" type="text" class="form-control"  aria-describedby="searchHelp" >-->
    <input id="autocomplete" placeholder="Enter address" onFocus="geolocate()" type="text" class="form-control"  aria-describedby="searchHelp">
    <small id="searchHelp" class="form-text text-muted">Powered by Google</small>
  </div>




<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text" id="basic-addon1">Number</span>
  </div>
  <input type="text" class="form-control" id="street_number" aria-describedby="basic-addon3">

</div>

<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text" id="basic-addon2">Street</span>
  </div>
  <input type="text" class="form-control" id="route" aria-describedby="basic-addon3">
</div>

<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text" id="basic-addon3">Suburb</span>
  </div>
  <input type="text" class="form-control" id="locality" aria-describedby="basic-addon3">
</div>

<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text" id="basic-addon4">Block</span>
  </div>
  <input type="text" class="form-control" id="locality" aria-describedby="basic-addon3">
</div>

<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text" id="basic-addon5 ">Map</span>
  </div>
  <input type="text" class="form-control" id="locality" aria-describedby="basic-addon3">
</div>

<div class="form-check mb-3">
  <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
  <label class="form-check-label" for="defaultCheck1">
   At Home?
  </label>
</div>

  <div class="form-group">
    <textarea class="form-control" id="exampleFormControlTextarea1" rows="3" placeholder="Add a note"></textarea>
  </div>

<div class="form-group">
<label for="exampleFormControlTextarea1">Action?</label>
<div class="form-check">
  <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" checked>
  <label class="form-check-label" for="exampleRadios1">
    Add address
  </label>
</div>
<div class="form-check">
  <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2">
  <label class="form-check-label" for="exampleRadios2">
    Delete address
  </label>
</div>
<div class="form-check disabled">
  <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3">
  <label class="form-check-label" for="exampleRadios3">
    Mark as 'Do Not Call'
  </label>
</div>
<div class="form-check disabled">
  <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3">
  <label class="form-check-label" for="exampleRadios3">
    Mark as 'Block of units'
  </label>
</div>
</div>

<div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text" id="basic-addon1">Your first name</span>
  </div>
  <input type="text" class="form-control" id="street_number" aria-describedby="basic-addon3">

</div>




</div>

<button type="submit" class="btn btn-outline-primary btn-block mb-5">Submit</button>
<!--
<button type="button" class="btn btn-outline-primary">Add address</button>
<button type="button" class="btn btn-outline-danger">Delete address</button>
-->

</main>

  <!--<input class="field" id="street_number"
              disabled="true"></input>-->
            
   <!-- <div id="locationField">
      <input id="autocomplete" placeholder="Enter address"
             onFocus="geolocate()" type="text"></input>
    </div>-->


    
    <!--<table id="address">
      <tr>
        <td class="label">Street address</td>
        <td class="slimField"><input class="field" id="street_number"
              disabled="true"></input></td>
        <td class="wideField" colspan="2"><input class="field" id="route"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">City</td>-->
        <!-- Note: Selection of address components in this example is typical.
             You may need to adjust it for the locations relevant to your app. See
             https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
        -->
        <!--<td class="wideField" colspan="3"><input class="field" id="locality"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">State</td>
        <td class="slimField"><input class="field"
              id="administrative_area_level_1" disabled="true"></input></td>
        <td class="label">Zip code</td>
        <td class="wideField"><input class="field" id="postal_code"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">Country</td>
        <td class="wideField" colspan="3"><input class="field"
              id="country" disabled="true"></input></td>
      </tr>
    </table>-->

    <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        //administrative_area_level_1: 'short_name',
        //country: 'long_name',
        //postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCpVcC59vC1O0WNy72B8HRJjWfCosGi3A8&libraries=places&callback=initAutocomplete"
        async defer></script>




{% endblock %}

